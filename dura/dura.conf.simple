#redis-mongodb同步配置文件 
# 支持类型 hash list set string
# 单个key从mongodb同步到redis时使用save模块的配置
#save:                                          # 遍历匹配的key后台自动保存到mongodb，无限循环
#    -
#        3:                                     # redis_pool.redis_init()中对应的redis客户端位置，从0开始
#            -                                  #
#                key_pattern: ^job_[^_]{32}$    # redis匹配的key的正则表达式
#                collection: job                # 对应存储到mongodb的collection
#                update: 0                      # hash set zset string 0在mongodb存在则不更新，默认1存在则替换更新； list -1更新只插入不存在的key，0不更新，默认1全量替换
#
#load:                                          # 启动时从mongodb加载到redis，只加载一次                                         
#    -                                          #
#        3:                                     #     
#            -                                  #        
#                collection: job                # mongodb的collection                         
#                update: 0                      # 0在redis存在则不更新，即以redis的数据为准；默认1存在也更新，即以mongodb的数据为准                    


#redis_send_client,redis_log_client,redis_tmp_client,redis_config_client,redis_job_client,redis_manage_client = redis_pool.redis_init()

save:
    -
        4: 
            -
                key_pattern: ^job_[^_]{32}$
                collection: job
                update: 0
    -
        1:
            -
                key_pattern: ^log_job_[^_]{32}$
                collection: job_log             
            -
                key_pattern: ^log_target_[^_]{32}$
                collection: target_log
            -
                key_pattern: ^log_host_.*$
                collection: host_log
                update: -1
            -
                key_pattern: ^[^_]{32}$
                collection: log
            -
                key_pattern: ^sum_[^_]{32}$
                collection: sum
    -
        2:
            -
                key_pattern: ^(session|global).*_[^_]{32}$
                collection: vars
            -
                key_pattern: ^(cluster|server|host).*(_[^_]{32})$
                collection: target_tmp
                
load:
    -
        4:
            -
                collection: job
                update: 0

