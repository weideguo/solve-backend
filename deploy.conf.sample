#需要跟solve相同
[redis_send]
db=0
password=my_redis_passwd
# 非空或存在，则当成sentinel
#service_name=mymaster                     
# 只有一组则当成单节点
nodes=[('127.0.0.1', 6379)]              
#nodes=[('127.0.0.1', 26479),('127.0.0.1', 26480),('127.0.0.1', 26481)]     

#需要跟solve相同
[redis_log]
db=1
password=my_redis_passwd
#service_name=mymaster                     
nodes=[('127.0.0.1', 6379)]              
#nodes=[('127.0.0.1', 26479),('127.0.0.1', 26480),('127.0.0.1', 26481)]   

#需要跟solve相同
[redis_tmp]
db=2
password=my_redis_passwd
#service_name=mymaster                     
nodes=[('127.0.0.1', 6379)]              
#nodes=[('127.0.0.1', 26479),('127.0.0.1', 26480),('127.0.0.1', 26481)]  

#需要跟solve相同
[redis_job]
db=14
password=my_redis_passwd
#service_name=mymaster                     
nodes=[('127.0.0.1', 6379)]              
#nodes=[('127.0.0.1', 26479),('127.0.0.1', 26480),('127.0.0.1', 26481)]  

#需要跟solve相同
[redis_config]
db=15
password=my_redis_passwd
#service_name=mymaster                     
nodes=[('127.0.0.1', 6379)]              
#nodes=[('127.0.0.1', 26479),('127.0.0.1', 26480),('127.0.0.1', 26481)]  


#用于存储web后端 配置参数/任务模板以及任务
[redis_manage]
db=5
password=my_redis_passwd
#service_name=mymaster                     
nodes=[('127.0.0.1', 6379)]              
#nodes=[('127.0.0.1', 26479),('127.0.0.1', 26480),('127.0.0.1', 26481)]  


[cas]
# 用于auth_new模块
# 使用CAS 不使用则注释或设置为空
#CAS协议提供的接口：
#login                #登陆(前端使用)
#logout               #登出(前端使用)
#validate             #验证ticket 返回text格式 (后端使用)
#serviceValidate      #验证ticket 返回xml格式  (后端使用)
#url=http://192.168.61.128:9095/cas

[mongodb]
# 用于持久保存redis的数据 不使用持久化则注释或设置为空
# 如果不设置，则数据全部存在redis中，过期则清除
# uri格式更兼容 uri为连接认证，db实际使用的数据库
# mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?options]]
#uri=mongodb://solve:solve123456@127.0.0.1:27017/solve
#db=solve

[common]
#上传文件的根目录
file_root=/tmp/solve/
#快速任务生成的临时playbook的根目录
playbook_temp=/tmp/solve/
#以下参数可以不设置自动从redis获取（必须先启动solve）
#solve存放playbook的目录
#playbook_root=/path_to_solve/playbook
#文件管理服务的信息，如果使用本地的文件管理，则不必设置
#fileserver_bind=127.0.0.1
#fileserver_port=9000
